= What I look for in a programmer

Are you just starting out on the wondrous journey of becoming a programmer?

Or are you on your way, and sometimes just feel overwhelmed by all the technologies, the buzzwords?

Maybe you're reading Hacker News, and you're gripped by that deep hollow feeling in your stomach because you don't
know Angular, or React, or Kotlin, or Dart, or Go ...

Or maybe you've just mastered Magento 2 Knockout, just to find out that it is being deprecated.

And there's that sinking feeling again ...

Like you're drowning in new stuff, like you're going deeper
and deeper in the mud of learning. And instead of getting on top and getting ahead, you're up to your
nose in quixotic frameworks and T.L.A.s (Three Letter Acronyms).

Your ears are filling up with JDK 14, you can't breath because Flutter is forcing its way into your mouth.

== Think of it this way ...

Technology enables technology:

Technology enables interconnectedness. Interconnectedness enables growth. Growth enables technology.

(Et cetera, et cetara ...)

What's more, new people come in to technology every day. Thus, more people will be creating more technology,
faster.

It is'n going to slow down.

It is going to speed up.

And with AI looming in the distance .... It might speed up *exponentially*.

== Staying ahead will drag you deep down under

It doesn't take a rocket scientist (or a computer scientist, fort that matter) to realize that if you try to stay ahead, to know
all there is, then you will find the opposite to happen: you will only get dragged further down.

You will drown in everything you don't know.

You will need a different approach.

== Secret 1: Discover the constants

If you've been in this game for a long time, or even if you just think about it deeply, you'll discover a
couple of things:

* There are *trends* in programming (and the industry is like a shoal of fish)
* There are *timeless basics*, that will never go away as long as weÂ´re using some version of the
link:https://en.wikipedia.org/wiki/Von_Neumann_architecture[von Neumann machine^,role="ext-link"]

For example, when it comes to trends, the pendulum is always swinging between so-called
link:thick-vs-thin-clients["thin" and
"thick" clients], which I've written about elsewhere.




This particular dispute is abput

== Secret 2: Niche down.

== Secret 3: Become advanced at the basics

There are many great niches, and I'm not going to tell you which one is the best for you, because, well,
I'm not psychic and chances are I don't know you.



== And the good news ...
... is that *that's* a road less travelled, and yet it is a lot smoother sailing than the downtrodden path.




