Class starts Monday Feburary 1st 2021.

== Emails

=== Intention

Stand out from the noise, deliver value, create good will by demonstrating I can help them, in order to sell the course...
So I can help them more.

* Write the emails
https://liveyourmessage.xperiencify.io/epm2020/module-4-experience-marketing-essentials/the-perfect-email-campaign-win-them-over-one-message-at-a-time/

Nurture, then: Perfect Email Campaign to sell your Experience Product.

==== Standing out from the noise, getting the emails opened

    You do it through telling simple stories of transformation - and they can be your stories or someone else's.
The important thing is that you tell stories that address the challenges, frustrations and self-limiting beliefs
that your tribe holds in any given area of their live that they want to change. Then you simply connect that story
to the lesson or tactic you want to teach that will help them.

== The One Thing
If I can make people believe that *The I.F.L. Method* (The Instant Feedback Loop Method) is the key to becoming a
successful programmer and that is only attainable through *The Java Journey* class, then all other objections and
concerns become irrelevant, and they have to give me money. (Russell Brunson)

== False beliefs to break and rebuild with true ones through stories

=== 1. The Vehicle
*F: I have to know an endless amount of things to become a proficient programmer ... Languages, frameworks, etc.*

*T: You have to understand the basics well. You can learn the rest when you need something specific.*

==== Epiphany Story: How To Get A Programming Gig In A Language You Don't Even Know
[Know the basics, and the relationship between languages])

In 20xx when I was a consultant, I got hired for a job for Norway's state broadcaster -- NRK is
like the BBC of Norway.

They'd noticed that people were discussing their shows online while watching, and wanted to create
a platform for it to happen.

I was interviewed for the assignment, and much to my astonishment, got it.

I was astonished, because I'd been totally clear on the fact that I didn't know the programming
language they were going to make it in -- JavaScript.

So as I left home for work on that first day, I was nervous.

Sure, getting paid $130 an hour for learning something new is pretty cool -- but it does put some
pressure on you to become confident and productive quickly.

Dive right in.

A lot of languages are really similar.

*F: It can't work for me. Some people are just born programmers.*

*T: Programming is a basic human skill, just like reading, writing and arithmetic. Anyone can learn to program with
time and effort.*

==== Epiphany Story: How To Learn The Basics Of Programming In Three Days Or Less

My 11-year old wanted to make a computer game ...


=== 2. Internal Beliefs
*F: Need to go to uni / college*

*T: Learning can happen anywhere. In this game, it's all about what you can do, not where you learned to do it.*

==== Epiphany Story: How To Become An A-Level Consultant Without A CS Degree
[Hiring August at Kodemaker - 2 year education in classical piano, we hired him for a senior consultant position]



F: I need to be good at maths / physics

F: I am not smart enough / it's too hard / Some people are born programmers

F: I have to be a nerd / a gamer

F: I have to be an introvert

F: I have to be young

F: I have to be fluent in English

=== 3. External Beliefs

*F: I can learn everything I need from free online sources*

==== Epiphany Story


F: I cannot afford it (tuition)

F: I don't have the time.

F: I need a better computer

F: I need to learn the "best" programming language to become a developer




=== Nurture Emails
Purpose: Make a first impression, build report, deliver value (show we can help people, by actually helping them),
send to content (and that content will further strengthen the bond and make offers)

==== Email 1 (Confirm opt-in) -- confirmation link should log  them in and redirect to a video-version of this letter
Purpose: Build report; have them click the email confirmation link!

*Subject:  IMPORTANT: Action needed! (Youâ€™re almost in!)*

Hey _first name_!

IMPORTANT: Click this link to confirm your email address.

Upon receiving notice that you signed up, I was immediately pleased!

Then I sat down to write you this very personal letter to welcome you to The Java Journey ...

Or not :-) Being a programmer, I obviously automated it. That's what we programmers do.

(That's how we create value ... by freeing up humans to do human-work, while machines do the repetitive tasks.)

Make no mistake though ... I'm a real life flesh-and-blood, sweat-and-tears, warts-and-worries - person, and if you'd happen to reply to this email, whaddaya know -- you'd actually reach me.

Now I'm guessing for some people receiving this email, it's not your first stab at learning how to code.

If that's you, and you feel that you've failed, or that you're confused and overwhelmed, the first thing I want to mention
is that it's not your fault. There's a lot of information out there, and it can be confusing. Many times the
information overload keeps you from success. It's okay!

If you've been concerned in the past that you just can't succeed with programming, I want to put those fears to rest. You can do this. You just need the right person to explain it to you.

The universities and colleges want you to think you need an expensive education to be successful. I'm here to tell you
they're wrong. They have their own reasons for wanting you to think that, but it's not true.

So that's what we're here for. I know you have a dream to change the world and make an impact, and during the next few days
I want to show you how to make that happen.

Do you agree with this statement: "Everything is easy when you know how"?

Yes?

Well, I have a goal for you ...

My goal for you is that you'll see HOW PROGRAMMING IS EASY, and as such, how it can help you reach your goals.

I have THREE SECRETS to help us accomplish that goal, and I will share those with you in the next few days.

IMPORTANT: You need to click [this link] to confirm this really is your email. It's for your own good, you know ;-) ...
This is how I can protect your inbox from the bad peoples ...

Only when you click that link will I be able to send you my very best and FREE training, and help you on your journey.

If you don't, I won't be able to help you learn programming the fun way, and I'll be a sad duck. And I don't want to be a sad duck. I want to be a happy duck!



So how do you know if clicking the link is a Good Idea For You (TM) ?

YOU'RE IN THE RIGHT POINT IN THE SPACE-TIME CONTINUUM AND SHOULD CLICK THE LINK NOW IF ANY ONE OF THESE RING TRUE TO YOU:

... you like to be intellectually stimulated

... you want to change the world

... you simply want a job, find a gig, or be more worth at your current job

... you want to create a startup and need to know coding


Do you recognize yourself in any of those descriptions? Then by all means, be my guest and click the link now.



-- AND YES THIS IS FOR YOU IF:

... you're new to programming

... you've programmed some other language before, but you're new to Java

... you've programmed Java before, but you haven't created a web app before

... you manage programmers or work with programmers -- and you need to know more about what this whole coding
thing is all about




WHY WOULD YOU NOT WANT TO CLICK THE LINK?

Here's the deal: I will give you a lot of great stuff to help you become a (better) programmer.

I also have stuff I sell.

So every now and then, I will make you an offer to buy something.

My evil plan is that you'll like the free stuff so much you'll think to yourself:

Wow, if he's giving THIS away, just imagine what's in the products he's selling ...!

So that's the deal.

Fair enough?



HERE'S WHAT WILL HAPPEN WHEN YOU CLICK THAT LINK

In the same instant that your email is confirmed, you'll automagically be logged in to The Java Journey Member's portal.

There, you'll be greeted with a complimentary (yes, FREE) digital course that just might help you open up to what's really possible for you.

It's where we start the work ... on you ... to blast some blocks you might be having on programming out of the waters.

So click the link to get cracking now:

[link]



Then tomorrow, I'll tell you the somewhat embarrassing story of how I totally screwed up one of my first programming jobs,
and the good that thankfully followed from that screw-up ...

The day after tomorrow, we'll dive into the number one thing that holds a lot of people back from becoming programmers ...

And the day after that, I'll let you in on the secret of how my 9-year-old son learned the basics of programming and
created his first computer game in a few hours :-)

Best regards,
Sten

P.S. Click [this link] to start your journey right now. If at some stage later you want to unsubscribe, there is a link to
do exactly that in all the emails I send you.

P.P.S. If you have a second, I'd love to know:

Why did you come to The Java Journey today? ...

What can we do to help you solve your biggest problem right now?


==== Email 2
Purpose: To help them see that this new opportunity will give them their greatest desires, increase their status, and
help them achieve their goals.

How: Share origin story. Build report by sharing weakness; show them that I was once where they are, and that I
screwed up, and that all that struggle led to the I.F.L. Method that I will teach them.


*Subject: How could I screw this up so badly? (As promised ...)*

_first_name_

I remember this as if it were yesterday,
January 15th, 2006:

I recall that it was snowing really heavy
so heavy in fact,
the tram I usually took to work
was horribly late ...

___Click here to watch the rest of this story ...__

My neck was wrapped up in this scarf-
looking thing that reminded me of something
you'd see in a Dr. Seuss book, and I was
trying to hide behind it!

I had just kissed my fiancÃ©e, Tonje,
who was pregnant with our first child, goodbye

So here I was, downtown Oslo, Norway, on the
no 11 tram to my first "real" job as a programmer

And, like the weather, I felt frozen inside,
half dead, and you'll see why soon...

___Click here to watch the rest of this story ...__

It had recently dawned on me that I was going
nowhere in my job and that it simply wasn't
going to get any better unless I took action
and I did, just like you're doing now...

Despite knowing this, I guess I didn't FEEL it
deep enough, as I needed to experience one
really embarrassing, horrific event to really
get me on the path to becoming a successful
programmer...

Feeling freezing cold and utterly alone, I pulled
out my entry card, swiped it at the front door to
office building, pulled the door open, and entered
into the corridor at work ....

And then my worst fear came true:

No sooner had I walked in, my boss called me into
his office

He had this stern look on his face, like he was
concerned

I felt my stomach turning

I KNEW what was coming next

___Click here to watch the rest of this story ...__

Best regards,
Sten


==== Email 3
Secret 1: Purpose: Qualify myself, then break and rebuild their belief pattern around The Vehicle (programming, Java in particular)

*Subject: Is THIS ONE holding you back?*

Yesterday I told you the rather embarrassing story of how I messed up one of my first programming jobs.

Today, let's switch gears and look at how not to screw things up :-)

... I see a lot of people being held back by this, and I don't want that for you!

You see, I fell in love with programming as a kid in the 1980s.

Despite the egg I got on my face in the job I told you about yesterday, that was a long time ago ...

PROGRAMMING is so much FUN that I've now spent the last 20 years developing software to solve problems for some of the
best known companies in my home country of Norway.

I've been an A-level partner at one of the top consulting agencies in Norway, sitting on the board for several years,
and I've been lucky enough to hire some of the best programmers I know of to come and work for us.

I'm not telling you this to honk my own horn, but for a reason ... You see ...

In one particular way, I think I was very lucky to learn programming in the 80's.

The reason was: I had NO choices.

My dad bought me a computer, a Sharp MZ-721 (which was the cool one, because you could load your programs from a cassette.)

It had ONE programming language, called BASIC.

Thus, deciding what to learn was easy: I learned BASIC.

Today, there are SO many languages to choose from ...

Do you learn Python, or Java, or C++, or Clojure, or PHP, or maybe even C? What about JavaScript? TypeScript?

What frameworks do you need to learn? React? Angular? Vue.js? Spring? Mono? Django? Laravel? Rails?

The lists are endless.

Overwhelm and confusion ensues.

By the pure-luck cosmic coincidence of being born in the 1970s and learning this in the 1980s, I dodged the single
biggest obstacle I see for a lot of people learning to program today (even though some of them are born in the 1950s and
1960s :-) ...

I call it "The Secret Of ONE".

To learn programming, you need to focus on ONE thing at a time ...

ONE language!

And probably, for a while:

ONE teacher ...

Then, LATER, when you MASTER your language, you can progress and learn more languages!

I've made a living programming C++, Java, Perl, PHP, Clojure, JavaScript, and probably some more I can't remember right
off the bat

... yet ...

It all started with The One.

All the time I see people asking:

"What is the best language to learn?"

... And that's really a nonsensical question, because ... HERE'S ANOTHER SECRET:

All the languages listed above (except for Clojure), are in the same "family" of programming-languages.

They are very much alike, and they all have the same building blocks.

Which makes it very confusing to try to learn more of them at once ... you'll get the different details all mixed up ...

.... but it also makes it easy to learn them ONE AFTER ANOTHER, because when you know one of them well, all you have to
do to learn the next one, is to notice how it differs from the one you know!

There isn't a "best language", nor a "best language to learn first" ...

The important thing is that you PICK ONE, and stick with it for a while.

And if all you know right now is that you want to learn programming, then I have a suggestion for you:

Pick Java.

Why?

Because:

1. It's the "Lingua franca" of the programming world -- it's like a "common tongue", the language used most places -- like English in real life (or AFK, as my kids say)
2. It's been around for YEARS and is ROCK SOLID and suited for REAL BUSINESS as well as toy projects
3. It's FAST!
4. It's under ACTIVE DEVELOPMENT, and it's not going anywhere -- you'll be able to get a job years from now
5. It's one of the two most popular languages in the world: as an employer, you'll get qualified people to help you with your Java projects years from now

... And of course, because:

6. It's what I'm about to start teaching you, so if you stick around, Java's what you're gettin' :-D

Why wouldn't you choose Java?

Well, if you're doing something very specialized, like statistical number crunching, some languages are more tailored
specifically for that. Otherwise, it's as good as it gets :-)

So if that's cool with you, I want you to commit right now to learn Java. To stick with it for a while. To stick with it
even when the going gets tough.

Say to yourself: For the next six weeks, I'm learning Java.

Say it out loud!

Write it on a piece of paper.

Commit to it.

So that's SECRET #1: Pick ONE language to learn, and stick with it for a while.

Tomorrow, I'll tell you the story of how my 9-year old used the power of one to learn the basics he needed to create the
game of Pong :-)



=== The Perfect Email Campaign

==== Day 1 - Email 1
Secret 2: Purpose: Break and rebuild their belief pattern about Internal Beliefs (It's too hard for ME)

F: I have to know an endless amount of things to become a proficient programmer ... Languages, frameworks, etc.

T: You have to understand the basics well. You can learn the rest when you need something specific.

Epiphany Story: How My 9-Year Old Son Learned the basics of programming in a few hours :-)

*Subject: How my 9-year old created his first computer game in a few hours*

A lot of students come into programming thinking it's very hard.

Fact is, you can learn the basics in a few hours.

Sure, like they say about chess: "it takes an hour to learn, but a lifetime to master."

However, unlike chess, you're not competing against anyone. Which is good news, because you can start having fun straight away.

Five years ago, my oldest son came to me because he wanted to create a video game. He was 9 at the time.

At nine, you haven't really developed your ability for abstract thinking. Neither have you heard anything about how
hard coding is supposed to be, which makes everything a lot easier for everybody.

So we sat down with something called Scratch -- which is a graphical programming website for kids, and we looked at what
pieces we had to play with and what they did.

We decided we wanted to make the game of Pong, because it is a very simple game.

We created a ball.

It just sat there. That was very boring.

It needs to move, said my son.

I concurred.

We examined what we knew about the ball.

There were two numbers: one called x, the other y.

We added 1 to x.

The ball jumped the tiniest fraction to the right.

Cool!

There it stood still again.

Not cool.

We added 200 to x.

The ball seemed to move magically from where it was, to somewhere further to the right.

Neat, but not what we wanted.

Continuing like this, experimenting with the pieces, we were able to create the game of Pong in a few hours, and then
we played our new game for a few hours.

It's not that my son now had grasped all the concepts of programming perfectly and was now a master programmer.

Not at all.

The point is, he had understood how to PLAY with programming, to peek and poke around to see what happens ... to have FUN with it.

And that makes all the difference.

He has made all sorts of weird and wonderful things in the last few years. A couple of years ago, he created a web site
where he could control the IKEA Smart Lights in his room ... setting the colors and turning them on and off through the
website.

Then we took a course in JavaScript together, and created the classical game Snake ...

... and now we're going to connect the game and the IKEA code so that when you crash the snake into the wall,
the lights in his room will start flashing :-D

I guess I digress :-) ...

The point I'm trying to make is that you can have a lot of fun with the basics, and you can build upon the basics fast.

You don't need to be a genius ... You just need to relax and enjoy it: Slow down to go fast :-)

So that's SECRET #2: PLAY AND HAVE FUN WITH IT. Don't take it too seriously. Learning is supposed to be fun!

That's why kids play all the time ... to learn about how the world works. And they'd never do it if it wasn't fun.
So, evolution made learning and discovery fun (not like some schools where kids get pre-digested factoids shoveled down
their throats, that's different ....)

Thankfully, fun is the name of the game.

And tomorrow, I'm going to introduce you to a classical piano player and he's the key to SECRET #3, so look out for it :-)



==== Day 2 - Email 2
Secret 3: Break and rebuild their belief pattern about External Beliefs

*F: Need to go to uni / college*

*T: Learning can happen anywhere. In this game, it's all about what you can do, not where you learned to do it.*

==== Epiphany Story: How To Become An A-Level Consultant Without A CS Degree
[Hiring August at Kodemaker - 2 year education in classical piano, we hired him for a senior consultant position]

Subject:

So there you go, SECRET #3: It doesn't matter where your learned programming, the only thing that matters is what you
can DO with it!


==== Day 3 - Email 3

==== Day 3 - Email 4

==== Day 4 - Email 5

==== Day 5 - Email 6

==== Day 5 - Email 7

==== Day 5 - Email 8

==== Subject line swipe

    Ready for your next step?
    Want to work with me directly?
    Did you get my message?
    Are you stuck?
    Why wait?
    Do you have a plan?
    Need a career reboot?
    Are you the one?
    Did you forget this?
    Ready for your next step?
    Want me to set this up for you?
    Should I hold a spot for you?
    Want a sneak peek?
    No money? No time?

    Final day to join (product name) until next year
    Find out if you should attend TODAY
    Doors closing - last chance to get my help on this...
    One time only
    Your LAST chance to ask me questions
    9. Last chance to grab your Complimentary Access Pass!
    10. Are you in? Last chance for Membership
    11. **Absolute last chance** (I believe you can do this)
    12. Last chance (and another BONUS just added)
    13. OK... Iâ€™m going to bribe you! Last Chance + NEW BONUS ADDED
    14. 1 hour left! Last chance to get this special deal
    15. Pssst... itâ€™s your last chance to get this before the holidays
    16. Donâ€™t let this offer close without you!
    17. Last chance - weâ€™re starting in 1 hour
    18. Hurry, youâ€™re about to miss getting this done in time
    19. Tomorrowâ€™s your last chance to join!


== Traffic

https://frankkern.com/5-day-challenge-alumni/ ?

https://frankkern.com/adclass/ ?
